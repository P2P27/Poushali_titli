# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16mtQjXTZ4w_hzAusL6bcFNIqxbEIEtY_
"""

a= 5
b= 10
sum = a+b
print (sum)

a = 5
b= 10
c= 15
if a > b:
  print ("a is greater")
else:
  print ("a is not greater")

def Fibonacci(n): 
    if n<0: 
        print("Incorrect input") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
  
print(Fibonacci(9))

FibArray = [1,1] 
  
def fibonacci(n): 
    if n<0: 
        print("Incorrect input") 
    elif n<=len(FibArray): 
        return FibArray[n-1] 
    else: 
        temp_fib = fibonacci(n-1)+fibonacci(n-2) 
        FibArray.append(temp_fib) 
        return temp_fib 
  
# Driver Program 
  
print(fibonacci(50))

lis=[9,5,6]
max=0
for i in lis:
  if i>max:
    max=i
print(max)

a= [3,5,7,9]
b=[]
for i in range (len(a)-1,-1,-1):
  b.append(a[i])
print(b)

a=0
b=1
print(a)
print(b)
n=50
for i in range(1,n):
  c=a+b
  a=b
  b=c
  print(c)

def fibonacci(n):
  a=0
  b=1
  print(a)
  print(b)
  for i in range(1,n):
    c=a+b
    a=b
    b=c
  print(c)

fibonacci(5)

# Load library
import numpy as np
# Create row vector
vector = np.array([1,2,3,4,5,6])
print(vector)

# Select third element of vector
vector[2]

# Select all elements of a vector
vector[:]

# Select everything up to and including the third element
vector[:3]

# Select everything after the third element
vector[3:]

# Select the last element
vector[-1]

# Return maximum element
np.max(vector)

np.min(vector)

#return mean
np.mean(vector)

#return variance
np.var(vector)

# Return standard deviation
np.std(vector)

import math
import numpy as np
a = np.array([4,2,7])
np.linalg.norm(a)

b = a/np.linalg.norm(a)
np.linalg.norm(b)

a = np.array([[1,2,3],[4,5,6],[7,8,9]])
b = np.array([[10,11,12],[13,14,15],[16,17,18]])
np.cross(a,b)

np.dot(a,b)

np.add(a,b)

import random
c = np.random.randint(1,9,(3,3))
print(c)

d = np.random.randn(3,3)
print(d)

np.dot(c,d)

np.cross(c,d)

np.add(c,d)

import pandas as pd
data=pd.read_csv("iris.csv")

data

data.head(5)

data.isnull()

import pandas as pd
df=pd.read_csv("pima-indians-diabetes.csv")

import pandas as pd
df=pd.read_csv("NAN.csv")

df.isnull()

df.fillna(0)

np.mean(df["Physics"])

df.fillna(np.mean(df["Physics"]))

df.dropna()

df1=pd.read_csv("NAN.csv")

df1

dt=df1["Physics"]

dt

data = pd.DataFrame(np.arange(36).reshape((6, 6)),
index=['Poushali', 'sayari', 'Trisha', 'Poulomi','Debotri','Soumi'],
columns=['Name', 'Roll_na', 'Physics', 'Math','Chemistry','Biology'])

data

data.drop("Name",axis=1)

df.iloc[1:3,2:4]

df.iloc[1:3,4]

data.loc[['Poushali','Trisha'], ['Physics','Math']]

import pandas as pd
d=pd.read_csv("NAN.csv")

d

d1=pd.read_csv("NAN1.csv")

d1

d2=pd.concat([d,d1],sort=False)

d2

pd.concat([d,d1],axis=1,join='outer',join_axes=None,
ignore_index=False)

pd.concat([d,d1],axis=1,join='outer',join_axes=None)

pd.concat([d,d1],axis=1,join='outer',join_axes=None,
ignore_index=True)

